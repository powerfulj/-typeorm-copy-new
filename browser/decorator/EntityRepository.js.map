{"version":3,"sources":["../browser/src/decorator/EntityRepository.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,KAAK,CAAC;AAI7C;;;;GAIG;AACH,MAAM,UAAU,gBAAgB,CAAC,MAAqC;IAClE,OAAO,UAAU,MAAgB;QAE7B,sBAAsB,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC7C,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACe,CAAC,CAAC;IACvC,CAAC,CAAC;AACN,CAAC","file":"EntityRepository.js","sourcesContent":["import { getMetadataArgsStorage } from \"../\";\r\nimport { EntityRepositoryMetadataArgs } from \"../metadata-args/EntityRepositoryMetadataArgs\";\r\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\r\n\r\n/**\r\n * Used to declare a class as a custom repository.\r\n * Custom repository can manage some specific entity or just be generic.\r\n * Custom repository optionally can extend AbstractRepository, Repository or TreeRepository.\r\n */\r\nexport function EntityRepository(entity?: Function | EntitySchema<any>): Function {\r\n    return function (target: Function) {\r\n\r\n        getMetadataArgsStorage().entityRepositories.push({\r\n            target: target,\r\n            entity: entity,\r\n        } as EntityRepositoryMetadataArgs);\r\n    };\r\n}\r\n"],"sourceRoot":".."}